version: "3.9"

services:
  # üß† Gateway Kotlin (Spring Boot)
  gateway:
    container_name: varlor-gateway
    build:
      context: .
      dockerfile: docker/gateway/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CALCULATIONS_API_URL=http://calculations-api:8000
      - PRODUCT_API_URL=http://product-api:80
      - AI_API_URL=http://ai-api:3000
    depends_on:
      - calculations-api
      - product-api
      - ai-api
      - postgres
    networks:
      - varlor-net

  # ‚öôÔ∏è Calculations API (C++)
  calculations-api:
    container_name: varlor-calculations
    build:
      context: .
      dockerfile: docker/calculations-api/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=varlor
      - DB_USER=varlor
      - DB_PASSWORD=varlor
    depends_on:
      - postgres
    networks:
      - varlor-net

  # üì¶ Product API (ASP.NET Core)
  product-api:
    container_name: varlor-product
    build:
      context: .
      dockerfile: docker/product-api/Dockerfile
    ports:
      - "5091:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      - postgres
    networks:
      - varlor-net

  # ü§ñ AI API (NestJS - Node.js/TypeScript)
  ai-api:
    container_name: varlor-ai
    build:
      context: .
      dockerfile: docker/ai-api/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      # Database connection (optional)
      - DATABASE_URL=postgresql://varlor:varlor@postgres:5432/varlor
    depends_on:
      - postgres
    networks:
      - varlor-net
    restart: unless-stopped

  # üåê Web Client (Angular)
  web-client:
    container_name: varlor-web
    build:
      context: .
      dockerfile: docker/web-client/Dockerfile
    ports:
      - "4200:80"
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80
    depends_on:
      - gateway
      - ai-api
      - product-api
      - calculations-api
    networks:
      - varlor-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # üóÑÔ∏è PostgreSQL Database
  postgres:
    image: postgres:16
    container_name: varlor-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=varlor
      - POSTGRES_USER=varlor
      - POSTGRES_PASSWORD=varlor
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - varlor-net

# üîó Shared network
networks:
  varlor-net:
    driver: bridge

# üíæ Persistent volume for PostgreSQL
volumes:
  pgdata: