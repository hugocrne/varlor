apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ai-api-hpa
  namespace: default
  labels:
    app: ai-api
    component: backend
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ai-api
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80

---
# PodDisruptionBudget pour la haute disponibilité
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: ai-api-pdb
  namespace: default
  labels:
    app: ai-api
    component: backend
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: ai-api

---
# NetworkPolicy pour sécuriser l'accès réseau
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ai-api-network-policy
  namespace: default
  labels:
    app: ai-api
    component: backend
spec:
  podSelector:
    matchLabels:
      app: ai-api
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
      # Autoriser les autres services backend
      - podSelector:
          matchLabels:
            component: backend
      # Autoriser l'ingress controller
      - namespaceSelector:
          matchLabels:
            name: ingress-nginx
    ports:
      - protocol: TCP
        port: 3000
  egress:
    # Autoriser les connexions sortantes nécessaires
    - to: []
      ports:
        - protocol: TCP
          port: 443  # HTTPS pour les APIs externes (OpenAI, etc.)
        - protocol: TCP
          port: 53   # DNS
        - protocol: UDP
          port: 53   # DNS
    # Autoriser la communication avec PostgreSQL
    - to:
      - podSelector:
          matchLabels:
            app: calculations-api
      ports:
        - protocol: TCP
          port: 5432