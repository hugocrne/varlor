apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ai-api-ingress
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"  # Augmenté pour les requêtes AI
    # Activer CORS pour les appels frontend
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS, PATCH"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-API-Key"
    # Timeout augmenté pour les traitements IA
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
spec:
  ingressClassName: nginx
  rules:
    # Accès direct via sous-domaine
    - host: ai-api.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ai-api-service
                port:
                  number: 3000

    # Route via le domaine principal
    - host: varlor.local
      http:
        paths:
          - path: /api/ai
            pathType: Prefix
            backend:
              service:
                name: ai-api-service
                port:
                  number: 3000
          - path: /api/ai/v1
            pathType: Prefix
            backend:
              service:
                name: ai-api-service
                port:
                  number: 3000