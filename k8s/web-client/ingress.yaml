apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web-client-ingress
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    # Activer CORS pour les appels frontend
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS, PATCH"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-API-Key"
    # Cache pour les assets statiques
    nginx.ingress.kubernetes.io/configuration-snippet: |
      location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
      }
spec:
  ingressClassName: nginx
  rules:
    # Acc√®s direct via sous-domaine
    - host: web-client.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: web-client-service
                port:
                  number: 80

    # Route via le domaine principal (application principale)
    - host: varlor.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: web-client-service
                port:
                  number: 80

    # Route alternative pour l'app
    - host: app.varlor.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: web-client-service
                port:
                  number: 80