apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: product-api-ingress
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    # Activer CORS si nécessaire
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
spec:
  ingressClassName: nginx
  rules:
    # Accès direct via sous-domaine
    - host: product-api.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: product-api-service
                port:
                  number: 80

    # Route via le domaine principal
    - host: varlor.local
      http:
        paths:
          - path: /api/products
            pathType: Prefix
            backend:
              service:
                name: product-api-service
                port:
                  number: 80
          - path: /weatherforecast
            pathType: Prefix
            backend:
              service:
                name: product-api-service
                port:
                  number: 80