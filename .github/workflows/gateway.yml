name: Build & Push Gateway

on:
  push:
    branches: ["main"]
    paths:
      - "gateway/**"
      - "docker/gateway/**"
      - "k8s/gateway/**"
      - ".github/workflows/gateway.yml"

jobs:
  build:
    runs-on: ubuntu-latest
    environment: VARLOR_GATEWAY

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/gateway/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/varlor-gateway:latest
            ${{ secrets.DOCKER_USERNAME }}/varlor-gateway:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: VARLOR_GATEWAY

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Gate deployment (skip if local kubeconfig)
        id: gate
        shell: bash
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        run: |
          if [ -z "${KUBE_CONFIG}" ]; then
            echo "KUBE_CONFIG is empty -> skip deploy"
            echo "can_deploy=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          if echo "${KUBE_CONFIG}" | grep -q "127.0.0.1:6443"; then
            echo "KUBE_CONFIG points to localhost (127.0.0.1:6443) -> skip deploy"
            echo "can_deploy=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          echo "can_deploy=true" >> "$GITHUB_OUTPUT"

      - name: Setup kubectl
        if: ${{ steps.gate.outputs.can_deploy == 'true' }}
        uses: azure/setup-kubectl@v4
        with:
          version: latest

      - name: Configure kubeconfig
        if: ${{ steps.gate.outputs.can_deploy == 'true' }}
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        run: |
          mkdir -p ~/.kube
          echo "${KUBE_CONFIG}" > ~/.kube/config

      - name: Apply Kubernetes manifests
        if: ${{ steps.gate.outputs.can_deploy == 'true' }}
        run: |
          kubectl apply -f k8s/gateway/deployment.yaml
          kubectl apply -f k8s/gateway/service.yaml || true
          if [ -f k8s/gateway/ingress.yaml ]; then kubectl apply -f k8s/gateway/ingress.yaml; fi

      - name: Update image with current commit SHA & wait rollout
        if: ${{ steps.gate.outputs.can_deploy == 'true' }}
        run: |
          kubectl set image deployment/varlor-gateway \
            gateway=${{ secrets.DOCKER_USERNAME }}/varlor-gateway:${{ github.sha }}
          kubectl rollout status deployment/varlor-gateway --timeout=180s

      - name: Deployment skipped (no reachable cluster)
        if: ${{ steps.gate.outputs.can_deploy != 'true' }}
        run: echo "Deploy skipped: provide a cloud-accessible kubeconfig in KUBE_CONFIG to enable."