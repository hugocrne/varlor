name: Build & Deploy Varlor Services

on:
  push:
    branches: ["main"]
    paths:
      - "gateway/**"
      - "calculations-api/**"
      - "docker/gateway/**"
      - "docker/calculations-api/**"
      - "k8s/gateway/**"
      - "k8s/calculations/**"
      - ".github/workflows/gateway.yml"

jobs:
  build:
    runs-on: ubuntu-latest
    environment: VARLOR_GATEWAY

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17 for Gateway
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 🧱 Build & Push Gateway
      - name: Build & Push Gateway image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/gateway/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/varlor-gateway:latest
            ${{ secrets.DOCKER_USERNAME }}/varlor-gateway:${{ github.sha }}

      # 🧮 Build & Push Calculations API
      - name: Build & Push Calculations API image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/calculations-api/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/varlor-calculations:latest
            ${{ secrets.DOCKER_USERNAME }}/varlor-calculations:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: VARLOR_GATEWAY

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Gate deployment (skip if local kubeconfig)
        id: gate
        shell: bash
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        run: |
          if [ -z "${KUBE_CONFIG}" ]; then
            echo "KUBE_CONFIG is empty -> skip deploy"
            echo "can_deploy=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          if echo "${KUBE_CONFIG}" | grep -q "127.0.0.1:6443"; then
            echo "KUBE_CONFIG points to localhost (127.0.0.1:6443) -> skip deploy"
            echo "can_deploy=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          echo "can_deploy=true" >> "$GITHUB_OUTPUT"

      - name: Setup kubectl
        if: ${{ steps.gate.outputs.can_deploy == 'true' }}
        uses: azure/setup-kubectl@v4
        with:
          version: latest

      - name: Configure kubeconfig
        if: ${{ steps.gate.outputs.can_deploy == 'true' }}
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        run: |
          mkdir -p ~/.kube
          echo "${KUBE_CONFIG}" > ~/.kube/config

      # 🚀 Deploy both services
      - name: Apply Kubernetes manifests
        if: ${{ steps.gate.outputs.can_deploy == 'true' }}
        run: |
          echo "🚀 Deploying Calculations API + PostgreSQL pod..."
          kubectl apply -f k8s/calculations/
          echo "⏳ Waiting for PostgreSQL to be ready..."
          kubectl wait --for=condition=ready pod -l app=calculations-api -n default --timeout=300s
          echo "🌐 Deploying Gateway..."
          kubectl apply -f k8s/gateway/

      # 🔁 Rollout Gateway
      - name: Rollout Gateway deployment
        if: ${{ steps.gate.outputs.can_deploy == 'true' }}
        run: |
          kubectl set image deployment/varlor-gateway \
            gateway=${{ secrets.DOCKER_USERNAME }}/varlor-gateway:${{ github.sha }}
          kubectl rollout status deployment/varlor-gateway --timeout=180s

      # 🔁 Rollout Calculations API (same pod as PostgreSQL)
      - name: Rollout Calculations deployment
        if: ${{ steps.gate.outputs.can_deploy == 'true' }}
        run: |
          kubectl set image deployment/calculations-api \
            calculations-api=${{ secrets.DOCKER_USERNAME }}/varlor-calculations:${{ github.sha }} \
            postgres=postgres:16
          kubectl rollout status deployment/calculations-api --timeout=300s

      - name: Deployment skipped (no reachable cluster)
        if: ${{ steps.gate.outputs.can_deploy != 'true' }}
        run: |
          echo "Deploy skipped: provide a cloud-accessible kubeconfig in KUBE_CONFIG to enable."
